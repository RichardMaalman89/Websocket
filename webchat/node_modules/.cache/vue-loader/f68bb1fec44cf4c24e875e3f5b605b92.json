{"remainingRequest":"/Users/r.f.maalman/Projects/Learning/webchat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/r.f.maalman/Projects/Learning/webchat/src/components/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/r.f.maalman/Projects/Learning/webchat/src/components/Users.vue","mtime":1558946751516},{"path":"/Users/r.f.maalman/Projects/Learning/webchat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/r.f.maalman/Projects/Learning/webchat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/r.f.maalman/Projects/Learning/webchat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/r.f.maalman/Projects/Learning/webchat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport Vue from 'vue';\nimport User from './User';\nimport VueSocketIO from 'vue-socket.io';\n\nexport default {\n  name: 'Users',\n  data () {\n    return {\n      total: 1,\n      users: {}\n    }\n  },\n  components: {\n    User\n  },\n  mounted() {\n    this.sockets.subscribe('image', a => {\n      if(!this.users[a.id]) {\n        Vue.set(this.users, a.id, {});\n      }\n\n      Vue.set(this.users[a.id], 'image', a.image);\n      Vue.set(this.users[a.id], 'name', a.name);\n    });\n  }\n}\n",{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <section class=\"grid\">\n      <User v-for=\"(user, key) in users\" :image=\"user.image\" :id=\"key\" :name=\"user.name\" :color=\"user.color\">\n        \n      </User>\n    </section>\n  </div>\n</template>\n\n<script>\n\nimport Vue from 'vue';\nimport User from './User';\nimport VueSocketIO from 'vue-socket.io';\n\nexport default {\n  name: 'Users',\n  data () {\n    return {\n      total: 1,\n      users: {}\n    }\n  },\n  components: {\n    User\n  },\n  mounted() {\n    this.sockets.subscribe('image', a => {\n      if(!this.users[a.id]) {\n        Vue.set(this.users, a.id, {});\n      }\n\n      Vue.set(this.users[a.id], 'image', a.image);\n      Vue.set(this.users[a.id], 'name', a.name);\n    });\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.grid {\n  display: grid;\n  gap: 1px;\n  grid-template-columns: 1fr 1fr 1fr;\n  align-items: flex-start;\n}\n\n</style>\n"]}]}