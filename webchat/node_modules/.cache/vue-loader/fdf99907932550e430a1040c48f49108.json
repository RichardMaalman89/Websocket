{"remainingRequest":"/Users/r.f.maalman/Projects/Webchat/webchat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/r.f.maalman/Projects/Webchat/webchat/src/components/Chat.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/r.f.maalman/Projects/Webchat/webchat/src/components/Chat.vue","mtime":1558946817780},{"path":"/Users/r.f.maalman/Projects/Webchat/webchat/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/r.f.maalman/Projects/Webchat/webchat/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/r.f.maalman/Projects/Webchat/webchat/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/r.f.maalman/Projects/Webchat/webchat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/r.f.maalman/Projects/Webchat/webchat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.chat ul {\n  max-height: 400px;\n  height: 100%;\n  overflow-y: scroll;\n  border: 2px solid black;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n}\n\n.chat li {\n  border-bottom: 1px solid grey;\n  padding: 10px;\n}\n\n.chat p {\n  margin: 0;\n}\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"chat\">\n    <h2>Chat</h2>\n    <input type=\"text\" v-model=\"text\" v-on:keyup.enter=\"sendMsg\"><button @click=\"sendMsg\">Send text</button>\n    <ul>\n      <li v-for=\"post in posts\"><p>{{ post }}</p></li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport VueSocketIO from 'vue-socket.io';\n\nexport default {\n  name: 'Chat',\n  props: ['name'],\n  data () {\n    return {\n      posts: [],\n      text: ''\n    }\n  },\n  methods: {\n    sendMsg () {\n      if (this.text) {\n        this.$socket.emit('chat message', this.name +': ' + this.text);\n      }\n      this.text = '';\n    }\n  },\n  mounted () {\n    this.sockets.subscribe('chat message', (data) => {\n      this.posts.push(data);\n    });\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.chat ul {\n  max-height: 400px;\n  height: 100%;\n  overflow-y: scroll;\n  border: 2px solid black;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n}\n\n.chat li {\n  border-bottom: 1px solid grey;\n  padding: 10px;\n}\n\n.chat p {\n  margin: 0;\n}\n</style>\n"]}]}